// pch.cpp: 미리 컴파일된 헤더에 해당하는 소스 파일

#include "framework.h"

// 미리 컴파일된 헤더를 사용하는 경우 컴파일이 성공하려면 이 소스 파일이 필요합니다.

/*
	헤더를 컴파일할 때,
	지금 우리가 이 프로젝트에서 만든 헤더만 따져도 10개에 근접하며
	나중에 이거저거 주차하다보면 수십개,

	개인 포트폴리오를 위해 게임에 필요한 내용을 만들다보면
	3자리수 단위로 헤더를 다루게 됨
	= 해당 라이브러리 + 우리가 만든 클래스들을
	매번 프로젝트를 빌드할 때마다 컴파일하기 때문에
	총 컴파일에 걸리는 시간이 늘어날 수 밖에 없음

	이를 막기 위해
	아에 특정 헤더 하나에 각종 헤더들을 몰아넣고
	그 헤더안에 있는 모든 헤더들을 미리 컴파일한 뒤에
	이를 파일로 만들어둬서

	이후에 프로젝트 전체를 컴파일할 때마다
	미리 컴파일해뒀던 내용들을 추가로 컴파일하지 않고 진행하도록 만드는 것
	= 미리 컴파일 헤더

	이 해더를 사용할 경우 크게 2가지의 정점을 가질 수 있음
	1) 한 번 컴파일을 하면 해당 헤더(+ 그 헤더의 파일)가 수정되기 전까지
	   그 헤더의 컴파일을 건너뛰게 되기 때문에
	   2번째부터는 전체 컴파일에 걸리는 시간이 대폭 줄어듬

	2) 미리 컴파일된 헤더를 사용하도록 설정했을 경우,
	   그 헤더 안에 있는 내용들은 웬만하면 프로젝트 전체에서 포함하도록 만들어지게 됨
	   -> 타 헤더에서 미리 컴파일된 헤더 내부에 있는 다른 헤더를 직접 포함시킬 필요가 없어
		  다른 해더에 있는 내용들을 비교적 쉽게 이용할 수 있다
	
	단점도 있음
	1) 변경된 파일이 많지 않다면 컴파일에 걸리는 시간이 적은 건 맞음
	   그러나, 변경된 파일이 많다면 그것들을 전부 수정한 파일을 다시 만들어야 되기 때문에
	   너무 많은 내용이 변경되었을 경우엔 오히려 적용하지 않는 것보다
	   시간이 더 많이 걸릴 수 있다.

	   ... 그러나 이건 적어도 기초반에서 다루는 범위 내의 프로젝트 규모에선
	   체감할 일이 없는 단점이니 당장은 무시해도 무방

	2) 사용하기 위해서는 좀 복잡한 성정 및 밑작업이 필요함
	   
*/